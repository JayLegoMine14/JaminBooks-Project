@page
@model JaminBooks.Pages.Admin.BookCreateModel
@{
    ViewData["Title"] = "Create Book";
    var BookImage = "";


}

<style>
    .hidden {
        display: none;
    }

    .unhidden {
        display: block;
    }
</style>


<!--The book page layout-->
<!--Hide the book id but still keep it available-->
<input id="BookID" type="hidden" name="BookID" value="@(Model.Book == null ? -1 : Model.Book.BookID)" />
<div class="container body-content">
    <div class="row">
        <div class="col-10 offset-1">
            <div class="row">
                <div class="col-12">
                    <h2 class="text-center">Create a Book</h2>
                </div>
            </div>

           
            <!--general book information entry-->
            <div class="row">
                <div class="col-12">
                    <div class="form-group row">
                        <label class="col-3 col-form-label">Title</label>
                        <div class="col-9">
                            <input id="Title" type="text" class="form-control" placeholder="Title" required maxlength="100" name="Title" value="@(Model.Book == null ? "" : Model.Book.Title )" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-3 col-form-label">Publication Date</label>
                        <div class="col-9">
                            <input id="PublicationDate" type="date" class="form-control" required name="PublicationDate" value="@(Model.Book == null ? "" : Model.Book.PublicationDate.ToString("yyyy-MM-dd") )" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-3 col-form-label">Copyright Date</label>
                        <div class="col-9">
                            <input id="CopyrightDate" type="date" class="form-control" required name="CopyrightDate" value="@(Model.Book == null ? "" : Model.Book.CopyrightDate.ToString("yyyy-MM-dd") )" />
                        </div>
                    </div>

                    <!--Author sub entry-->
                    <div class="form-group row">
                        <label class="col-3 col-form-label">Author</label>
                        <div class="col-5">
                            <select id="Authorlist" class="form-control" multiple>
                                @foreach (Model.Author a in Model.Authors)
                {
                    @Html.Raw("<option " + (Model.Book != null && Model.Book.Authors.Any(a2 => a2.AuthorID == a.AuthorID) ? "selected='selected'" : "") + " value='" + a.AuthorID + "'>" + a.FullName + "</option>");
}
                            </select>
                        </div>
                        <div class="col-4">
                            <input id="SaveAuthor" type="button" onclick="unhide(this, 'author'); " value="Add New" class="btn btn-block btn-dark">
                        </div>
                    </div>
                    <div id="author" class="hidden">
                        <div class="form-group row offset-1">
                            <label class="col-3 col-form-label">First Name</label>
                            <div class="col-9">
                                <input id="AFirstName" type="text" class="form-control" placeholder="Author First Name" required name="FName" />
                            </div>
                        </div>
                        <div class="form-group row offset-1">
                            <label class="col-3 col-form-label">Last Name</label>
                            <div class="col-9">
                                <input id="ALastName" type="text" class="form-control" placeholder="Author Last Name" required name="LName" />
                            </div>
                        </div>
                        <div class="form-group row offset-1">
                            <label class="col-3 col-form-label"></label>
                            <div class="col-9">
                                <button id="CreateAuthor" class="btn btn-block btn-red">Save New Author</button>
                            </div>
                        </div>
                    </div>


                    <!--End Author sub entry-->
                    <!--Category sub Entry-->

                    <div class="form-group row">
                        <label class="col-3 col-form-label">Category</label>
                        <div class="col-5">
                            <select id="BookCat" class="form-control" multiple>
                                @foreach (Model.Category c in Model.Categories)
                {
                    @Html.Raw("<option " + (Model.Book != null && Model.Book.Categories.Any(c2 => c2.CategoryID == c.CategoryID) ? "selected='selected'" : "") + " value='" + c.CategoryID + "'>" + c.CategoryName + "</option>");
}
                            </select>
                        </div>
                        <div class="col-4">
                            <input id="SaveCategory" type="button" onclick="unhide(this, 'category'); unEdit(this, 'CatList') " value="Add New" class="btn btn-block btn-dark">
                        </div>
                    </div>

                    <div id="category" class="hidden">
                        <div class="form-group row offset-1">
                            <label class="col-3 col-form-label">Category Name</label>
                            <div class="col-9">
                                <input id="CategoryName" type="text" class="form-control" placeholder="Category" required name="category" />
                            </div>
                        </div>

                        <div class="form-group row offset-1">
                            <label class="col-3 col-form-label"></label>
                            <div class="col-9">
                                <button id="CreateCategory" class="btn btn-block btn-red">Save New Category</button>
                            </div>
                        </div>
                    </div>

                    <!--End Category Sub Entry-->
                    <!--Publisher sub entry-->
                    <div class="form-group row">
                        <label class="col-3 col-form-label">Publisher</label>
                        <div class="col-5">
                            <select id="Publist" class="form-control">
                                @foreach (Model.Publisher p in Model.Publishers)
                {
                    @Html.Raw("<option " + (Model.Book != null && Model.Book.Publishers.Any(p2 => p2.PublisherID == p.PublisherID) ? "selected='selected'" : "") + " value='" + p.PublisherID + "'>" + p.PublisherName + "</option>");
}

                            </select>
                        </div>
                        </div>



                    <!--final general entries-->
                    <div class="form-group row">
                        <label class="col-3 col-form-label">ISBN10</label>
                        <div class="col-9">
                            <input id="isbn10" type="text" class="form-control" maxlength=10 placeholder="ISBN10" required name="ISBN10" value="@(Model.Book == null ? "" : Model.Book.ISBN10)" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-3 col-form-label">ISBN13</label>
                        <div class="col-9">
                            <input id="isbn13" type="text" class="form-control" maxlength=13 placeholder="ISBN13" required name="ISBN13" value="@(Model.Book == null ? "" : Model.Book.ISBN13 )" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-3 col-form-label">Customer Price</label>
                        <div class="input-group col-9">
                            <div class="input-group-prepend">
                                <div class="input-group-text">$</div>
                            </div>
                            <input id="Price" type="number" class="form-control" step="0.1" required name="Price" value="@(Model.Book == null ? "0.00" : Model.Book.Price.ToString("0.00"))" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-3 col-form-label">Cost</label>
                        <div class="input-group col-9">
                            <div class="input-group-prepend">
                                <div class="input-group-text">$</div>
                            </div>
                            <input id="Cost" type="number" class="form-control" step="0.1" required name="Cost" value="@(Model.Book == null ? "0.00" : Model.Book.Cost.ToString("0.00"))" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-3 col-form-label">Quantity</label>
                        <div class="col-9">
                            <input id="Quantity" type="number" class="form-control" required name="Quantity" value="@(Model.Book == null ? 0 : Model.Book.Quantity)" />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-3 col-form-label">Description</label>
                        <div class="col-9">
                            <textarea id="Description" class="form-control" placeholder="Enter the Description" required name="Description">@(Model.Book == null ? "" : Model.Book.Description)</textarea>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-3 col-form-label"></label>
                        <div class="col-9">
                            <button id="SaveBook" class="btn btn-block btn-dark">Save Book</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Script for the buttons-->
<script>

    $(document).ready(function () {

        $("#SaveBook").click(function () {
            if (validate()) {

                var data = {
                    BookID: $("#BookID").val(),
                    Title: $("#Title").val(),
                    PublicationDate: $("#PublicationDate").val(),
                    CopyrightDate: $("#CopyrightDate").val(),
                    Authorlist: JSON.stringify($("#Authorlist").val()),
                    BookCat: JSON.stringify($("#BookCat").val()),
                    Publisher: $("#Publist").val(),
                    ISBN10: $("#isbn10").val(),
                    ISBN13: $("#isbn13").val(),
                    Price: $("#Price").val(),
                    Cost: $("#Cost").val(),
                    Quantity: $("#Quantity").val(),
                    Description: $("#Description").val()
                }

                $.ajax({
                    type: "POST",
                    url: "/Model/SaveBook",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        location.href ='/Book?id=' + response.id;
                    },
                    failure: function (response) {
                        location.href = "\Error";
                    }
                });
            }
        });

        $("#CreateAuthor").click(function () {
            if (validate()) {

                var data = {
                    AFirstName: $("#AFirstName").val(),
                    ALastName: $("#ALastName").val()                
                }

                $.ajax({
                    type: "POST",
                    url: "/Model/CreateAuthor/",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        

                    },
                    failure: function (response) {
                        location.href = "\Error";
                    }
                });
            }
        });

        $("#CreateCategory").click(function () {
            if (validate()) {

                var data = {

                    CategoryName: $("#CategoryName").val()

                }

                $.ajax({
                    type: "POST",
                    url: "/Model/CreateCategory/",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $("<option selected = 'selected' value='" + c.CategoryID + "'>" + c.CategoryName + "</option>").appendTo("BookCat");
                    },
                    failure: function (response) {
                        location.href = "\Error";
                    }
                });
            }
        });
    });





    function validate() {
        return true;

    }
</script>

<script type="text/javascript">
    function unhide(clickedButton, divID) {
        var item = document.getElementById(divID);
        if (item) {
            if (item.className == 'hidden') {
                item.className = 'unhidden';
                clickedButton.value = 'Cancel'
            } else {
                item.className = 'hidden';
                clickedButton.value = 'Add New'
            }
        }
    }



</script>


