@page
@model JaminBooks.Pages.AccountModel
@{
    ViewData["Title"] = "Account";
    Layout = "~/Pages/_Layout.cshtml";
    ViewData["IsLoggedIn"] = Model.CurrentUser != null;
    ViewData["Name"] = Model.CurrentUser == null ? "" : Model.CurrentUser.FirstName + " " + Model.CurrentUser.LastName;

    var userIcon = Model.DisplayUser.Icon != null ?
    String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.DisplayUser.Icon)) :
    "/images/user.png";
}

@if ( Model.DisplayUser != null)
{

<style>
    .icon-div {
        width: 200px;
        height: 200px;
        overflow: hidden;
        border-radius: 200px;
        float: right;
    }
    .create-card {
        text-align: center;
        border: 2px dashed #2b303a;
        margin: 10px;
        font-size: 3rem;
        background-color: #ccc;
    }
</style>

<div class="container">
    <div class="row mb-3 mt-3">
        <div class="col-6">
            <div class="icon-div">
                <img id="Image" src="@userIcon" />
            </div>
        </div>
        <div class="col-3 pt-3">
            <div class="custom-file">
                <div class="input-group mb-3">
                    <input type="file" class="custom-file-input" id="customFile">
                    <label class="custom-file-label" for="customFile">
                        Choose file...
                    </label>
                    <button id="Button" class="btn btn-secondary mt-2">Upload</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-8 offset-2">
            <div class="row">
                <div class="col-xs-6 col-sm-6 col-md-6">
                    <div class="form-group">
                        <input type="text" id="FirstName" value="@Model.DisplayUser.FirstName" class="form-control input-sm" maxlength="50" placeholder="First Name">
                    </div>
                </div>
                <div class="col-xs-6 col-sm-6 col-md-6">
                    <div class="form-group">
                        <input type="text" id="LastName" value="@Model.DisplayUser.LastName" class="form-control input-sm" maxlength="50" placeholder="Last Name">
                    </div>
                </div>
            </div>
            <div class="form-group">
                <input type="email" id="Email" value="@Model.DisplayUser.Email" class="form-control input-sm" maxlength="100" placeholder="Email Address">
            </div>
            <div class="row mb-3">
                <div class="col-6 offset-3 text-center">
                    <input id="Save" type="submit" value="Save Changes" class="btn btn-primary btn-block btn-dark-red">
                </div>
            </div>
            <div class="row">
                <div class="col-xs-6 col-sm-6 col-md-6">
                    <div class="col-xs-12">
                        <div class="form-group">
                            <input type="password" id="Password" class="form-control input-sm" placeholder="New Password">
                        </div>
                    </div>
                    <div class="col-xs-12">
                        <div class="form-group">
                            <input type="password" id="PasswordConfirm" class="form-control input-sm" placeholder="Confirm New Password">
                        </div>
                    </div>
                </div>
                <div class="col-xs-6 col-sm-6 col-md-6">
                    <ul class="list-unstyled" style="line-height: 1.7">
                        <li>
                            <span id="CharsRed" class="fa fa-times text-danger"></span>
                            <span id="CharsGreen" class="fa fa-check text-success" style="display:none"></span>
                            At least 8 characters
                        </li>

                        <li>
                            <span id="CapsRed" class="fa fa-times text-danger"></span>
                            <span id="CapsGreen" class="fa fa-check text-success" style="display:none"></span>
                            Capitals and numbers
                        </li>

                        <li>
                            <span id="MatchRed" class="fa fa-times text-danger"></span>
                            <span id="MatchGreen" class="fa fa-check text-success" style="display:none"></span>
                            Matching passwords
                        </li>
                    </ul>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-6 offset-3 text-center">
                    <input id="ChangePassword" type="submit" value="Change Password" class="btn btn-primary btn-block btn-dark-red">
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-8 offset-2">
            <div class="row">
                <div class="col-12">
                    <h3>Phones</h3>
                </div>
            </div>
            <div class="row">
                <div class="col-12 card-deck mb-3">
                    @foreach (Model.Phone phone in Model.DisplayUser.Phones)
                    {
                        <div class="card" style="width: 12rem;">
                            <div class="card-header">
                                <div class="float-right">
                                    <button type="button" class="btn btn-sm btn-success"><i class="fas fa-edit"></i></button>
                                    <button type="button" class="btn btn-sm btn-danger"><i class="fas fa-trash"></i></button>
                                </div>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@phone.Number</h5>
                                <h6 class="card-subtitle mb-2 text-muted">@phone.Category</h6>
                            </div>
                        </div>
                    }
                    <div class="card" style="width: 12rem;">
                        <div id="PhoneCreate" class="card-body create-card" style="line-height: 89px">
                            <i class="fas fa-plus"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-8 offset-2">
            <div class="row">
                <div class="col-12">
                    <h3>Cards</h3>
                </div>
            </div>
            <div class="row">
                <div class="col-12 card-deck mb-3">
                    @foreach (Model.Card card in Model.DisplayUser.Cards)
                    {
                        <div class="card" style="width: 12rem;">
                            <div class="card-header">
                                <div class="float-right">
                                    <button type="button" class="btn btn-sm btn-success"><i class="fas fa-edit"></i></button>
                                    <button type="button" class="btn btn-sm btn-danger"><i class="fas fa-trash"></i></button>
                                </div>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">****-****-****-@card.LastFourDigits</h5>
                                <h6 class="card-subtitle mb-2 text-muted">@(card.ExpMonth + "/" + card.ExpYear)</h6>
                                <h5 class="card-title text-muted">@card.Name</h5>
                            </div>
                        </div>
                    }
                    <div class="card" style="width: 12rem;">
                        <div id="CardCreate" class="card-body create-card" style="line-height: 125px">
                            <i class="fas fa-plus"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        updateProfileIcon();
        $("#Image").load(function () {
            updateProfileIcon();
        });

        $('#customFile').change(function () {
            var filename = $(this).val().split('\\').pop();
            $(".custom-file-label").html(filename);
        });

        $("#Button").click(function () {
            var canvas = document.createElement("canvas");

            var reader = new FileReader();
            reader.onload = function (event) {
                var img = new Image();
                img.onload = function () {
                    var size = 300;
                    if (img.height > img.width) {
                        canvas.width = size;
                        canvas.height = size * img.height / img.width;
                        canvas.getContext('2d').drawImage(img, 0, 0, canvas.width, canvas.height);
                    } else {
                        canvas.width = size * img.width / img.height;
                        canvas.height = size;
                        canvas.getContext('2d').drawImage(img, 0, 0, canvas.width, canvas.height);
                    }

                    $("#Image").get(0).src = canvas.toDataURL('image/png');

                    $.ajax({
                        type: "POST",
                        url: "Model/SaveUserIcon",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                        data: JSON.stringify({
                            Icon: canvas.toDataURL('image/png').replace(/^data:image\/(png|jpeg);base64,/, '')
                        }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {

                        },
                        failure: function (response) {
                            alert(response);
                        }
                    });
                }
                img.src = reader.result;
            }
            reader.readAsDataURL($("#customFile").get(0).files[0]); 
        });

        function updateProfileIcon() {
            var image = new Image();
            image.src = $("#Image").attr("src");
            $("#Image").removeAttr("style");
            $("#Image").css(image.width > image.height ? "height" : "width", "200px");
        }
    });
</script>

}

